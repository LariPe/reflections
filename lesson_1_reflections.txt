How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    The differences between the files were listed automatically, wherefore I didn't have to go through all the code.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

	By not having to save multiple files with different names,
	which would only have minor differences

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
	
	Pros: you can make sure that you know where you left off and
	to get a reasonable, compilable commits

	Cons: you might forget when would be a good time to commit


Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

	When it comes to programming there are oftetimes several files that are dependent on each other, whereas e.g word documents might be independent.


How can you use the commands git log and git diff to view the history of files?

	git log shows the whole history of commits, and git diff can compare to different commits with a command "git diff id1 id2", by showing added and removed lines of code.

How might using version control make you more confident to make changes that could break something?

	By knowing that I can get easily back to previous commits that are fully functional.


Now that you have your workspace set up, what do you want to try using Git for?

	For example, to quickly run a couple of different models corresponding to different commits.